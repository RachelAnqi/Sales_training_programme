dummy_data <- c("inRadio=option2","inNumber=10","control_label=Updated TEXT" )
out <- lapply(dummy_data, function(l) unlist(strsplit(l, "=")))
out
out[[2]]
str(out[[2]])
input<- readRDS("inputs.RDS")
input
str(input)
input[[1]]
input[[10]]
names(input)
values(input)
value(input)
input[[2]]
input[[15]]
input[[9]]
str(input[[9]])
unlist(input)
unlist(input)[[1]]
unlist(input)[[5]]
unlist(input)[[8]]
unlist(input)[[15]]
input[[15]]
input[[1]]
shiny::runApp('simplified_server/server')
runApp('simplified_server/server')
calculator <- function(input,phase){
phase1_promotional_budget=0
phase1_total_time_arrangement1 <- 0
phase1_total_time_arrangement2 <- 0
for(i in 1:3){
phase1_promotional_budget <-
sum(c(phase1_promotional_budget,
as.numeric(input[[paste("p",phase,"_promotional_budget_hosp",i,sep="")]])),
na.rm = TRUE)
tmp <- sum(c(as.numeric(input[[paste("p",phase,"_hosp",i,"_worktime_1",sep="")]])/100*worktime,
as.numeric(input[[paste("p",phase,"_hosp",i,"_worktime_2",sep="")]])/100*worktime,
as.numeric(input[[paste("p",phase,"_hosp",i,"_worktime_3",sep="")]])/100*worktime,
as.numeric(input[[paste("p",phase,"_hosp",i,"_worktime_4",sep="")]])/100*worktime),
na.rm = TRUE)
if (input[[paste("p",phase,"_sr_hosp",i,sep = "")]]==
available_srs[1]){
phase1_total_time_arrangement1 <-
phase1_total_time_arrangement1 +tmp
} else if (input[[paste("p",phase,"_sr_hosp",i,sep = "")]]==
available_srs[2]) {
phase1_total_time_arrangement2 <-
phase1_total_time_arrangement2 +tmp
}
}
team_meeting <- as.numeric(input[[paste("p",phase,"_flm_team_meeting",sep="")]])
phase1_total_time_arrangement1 <- phase1_total_time_arrangement1 +
as.numeric(input[[paste("p",phase,"_sr1_sales_training",sep="")]]) +
as.numeric(input[[paste("p",phase,"_sr1_product_training",sep="")]]) +
team_meeting
phase1_total_time_arrangement2 <- phase1_total_time_arrangement2 +
as.numeric(input[[paste("p",phase,"_sr2_sales_training",sep="")]]) +
as.numeric(input[[paste("p",phase,"_sr2_product_training",sep="")]]) +
team_meeting
data <- c(phase1_promotional_budget,
phase1_total_time_arrangement1,
phase1_total_time_arrangement2)
data
}
input<-readRDS("inputs.RDS")
input
calculator(input,1)
runApp('simplified_server/server')
runApp('simplified_server/server')
